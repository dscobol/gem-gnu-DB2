      **********************************************************
      * Program name:    INVREG
      * Original author: David Stagowski
      *
      *    Description: Print an Invoice register.
      *
      * Maintenance Log
      * Date       Author        Maintenance Requirement
      * ---------- ------------  --------------------------------
      * 2023-03-11 dscobol       Created to learn.
      * 2023-03-14 dscobol       Use env vars from .env file.
      * 20XX-XX-XX               If you change me, change this.
      *
      **********************************************************
       IDENTIFICATION DIVISION.
       PROGRAM-ID. INVREG.

       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
      * SOURCE-COMPUTER.   IBM WITH DEBUGGING MODE.

       INPUT-OUTPUT SECTION.
       FILE-CONTROL.

           SELECT INVREG
           ASSIGN TO RINVREG
           ORGANIZATION IS LINE SEQUENTIAL
           FILE STATUS IS WS-INVREG-Status.

       DATA DIVISION.
       FILE SECTION.
       FD  INVREG
           RECORDING MODE IS F
           BLOCK CONTAINS 0 RECORDS.
       01  Print-Line        PIC X(131).

       WORKING-STORAGE SECTION.
           EXEC SQL
               INCLUDE SQLCA
           END-EXEC.

           EXEC SQL
           DECLARE CUSTOMERS TABLE
           (
            CUSTNO        CHAR(6) not null,
           	FNAME         CHAR(20) not null,
           	LNAME         CHAR(30) not null,
           	ADDR          CHAR(30) not null,
           	CITY          CHAR(20) not null,
           	STATE         CHAR(2) not null,
           	ZIPCODE       CHAR(10) not null)
           END-EXEC.

           EXEC SQL
           DECLARE INVOICES TABLE
           (
           	INVCUST         CHAR(6) not null,
           	INVNO           CHAR(6) not null,
           	INVDATE         DATE not null,
           	INVSUBT         DECIMAL(9,2) not null,
           	INVSHIP         DECIMAL(7,2) not null,
           	INVTAX          DECIMAL(7,2) not null,
           	INVTOTAL        DECIMAL(9,2) not null,
           	INVPROM         CHAR(10) not null)
           END-EXEC.

           EXEC SQL BEGIN DECLARE SECTION END-EXEC.
       01  HV-Employee-Row.
           12 HV-Inv-Number           PIC X(06).
           12 HV-Inv-Sub-Total        PIC S9(7)V9(2) COMP-3.
           12 HV-Inv-Tax              PIC S9(5)V9(2) COMP-3.
           12 HV-Inv-Shipping         PIC S9(5)V9(2) COMP-3.
           12 HV-Inv-Total            PIC S9(7)V9(2) COMP-3.
           12 HV-Cust-Number          PIC X(06).
           12 HV-Cust-First-Name      PIC X(20).
           12 HV-Cust-Last-Name       PIC X(30).

      *    DB1 connection parameters.
       01  DB1-DBName                 PIC X(8).
       01  DB1-User-ID                PIC X(10).
       01  DB1-Password.
           49 DB1-Passwd-Length       PIC S9(4) COMP-5  VALUE 0.
           49 DB1-Passwd-Name         PIC X(18).
           EXEC SQL END DECLARE SECTION END-EXEC.

           EXEC SQL DECLARE DB1-C1 CURSOR FOR
                    SELECT A.INVNO, A.INVSUBT, A.INVTAX, A.INVSHIP,
                           A.INVTOTAL, B.CUSTNO, B.FNAME, B.LNAME
                    FROM INVOICES A
                       INNER JOIN CUSTOMERS B
                       ON A.INVCUST = B.CUSTNO
                    ORDER BY INVNO
           END-EXEC.

       01 WS-SQL-STATUS                PIC S9(9) COMP-5.
          88 SQL-STATUS-OK             VALUE    0.
          88 SQL-STATUS-NOT-FOUND      VALUE  100.
          88 SQL-STATUS-DUP            VALUE -803.

       01  WS-FILE-STATUS.
           COPY WSFST REPLACING ==:tag:== BY ==INVREG==.

       01  CURRENT-DATE-AND-TIME.
           COPY WSDT REPLACING ==:tag:== BY ==CDT==.

       01  WS-Counters.
           12 WS-Invoice-Record-Cnt  PIC 9(4) COMP VALUE ZERO.
           12 WS-Inv-Sub-Total-Cnt   PIC S9(9)V99 VALUE ZERO.
           12 WS-Inv-Tax-Cnt         PIC S9(7)V99 VALUE ZERO.
           12 WS-Inv-Shipping-Cnt    PIC S9(7)V99 VALUE ZERO.
           12 WS-Inv-Total-Cnt       PIC S9(9)V99 VALUE ZERO.

       01  R1-Counters.
           12 R1-Max-Lines         PIC 9(4) COMP VALUE 60.
           12 R1-Line-Count        PIC 9(4) COMP VALUE ZEROES.
           12 R1-Line-Advance      PIC 9(4) COMP VALUE ZEROES.
           12 R1-Page-Count        PIC 9(4) COMP VALUE ZEROES.

       01  R1-Page-Header.
           12 FILLER                   PIC X(006) VALUE "Date: ".
           12 R1-HDR-DATE.
              15 R1-HDR-YY             PIC 9(4).
              15 FILLER                PIC X(1) VALUE "-".
              15 R1-HDR-MM             PIC 9(2).
              15 FILLER                PIC X(1) VALUE "-".
              15 R1-HDR-DD             PIC 9(2).
           12 FILLER                   PIC X(021) VALUE SPACE.
           12 FILLER                   PIC X(034)
                 VALUE "     Invoice Register Report      ".
           12 FILLER                   PIC X(049) VALUE SPACE.
           12 FILLER                   PIC X(005) VALUE "Page:".
           12 FILLER                   PIC X(001) VALUE SPACE.
           12 R1-HDR-Page-Count        PIC ZZ9.

       01  R1-Column-Header1.
           12 FILLER   PIC X(007) VALUE "Invoice".
           12 FILLER   PIC X(005) VALUE SPACES.
           12 FILLER   PIC X(008) VALUE "Subtotal".
           12 FILLER   PIC X(008) VALUE SPACES.
           12 FILLER   PIC X(003) VALUE "Tax".
           12 FILLER   PIC X(003) VALUE SPACES.
           12 FILLER   PIC X(008) VALUE "Shipping".
           12 FILLER   PIC X(009) VALUE SPACES.
           12 FILLER   PIC X(005) VALUE "Total".
           12 FILLER   PIC X(001) VALUE SPACES.
           12 FILLER   PIC X(020) VALUE "Customer Information".

       01  R1-Column-Header2.
           12 FILLER    PIC X(006) VALUE ALL "=".
           12 FILLER    PIC X(001) VALUE ALL SPACES.
           12 FILLER    PIC X(013) VALUE ALL "=".
           12 FILLER    PIC X(002) VALUE ALL SPACES.
           12 FILLER    PIC X(009) VALUE ALL "=".
           12 FILLER    PIC X(002) VALUE ALL SPACES.
           12 FILLER    PIC X(009) VALUE ALL "=".
           12 FILLER    PIC X(001) VALUE ALL SPACES.
           12 FILLER    PIC X(013) VALUE ALL "=".
           12 FILLER    PIC X(001) VALUE ALL SPACES.
           12 FILLER    PIC X(040) VALUE ALL "=".

       01  R1-Detail-Line.
           12 R1-Inv-Number           PIC X(06).
           12 FILLER                  PIC X(001) VALUE SPACES.
           12 R1-Inv-Sub-Total        PIC $$,$$$,$$9.99.
           12 FILLER                  PIC X(001) VALUE SPACES.
           12 R1-Inv-Tax              PIC $$$,$$9.99.
           12 FILLER                  PIC X(001) VALUE SPACES.
           12 R1-Inv-Shipping         PIC $$$,$$9.99.
           12 FILLER                  PIC X(001) VALUE SPACES.
           12 R1-Inv-Total            PIC $$,$$$,$$9.99.
           12 FILLER                  PIC X(001) VALUE SPACES.
           12 R1-Cust-Number          PIC X(06).
           12 FILLER                  PIC X(001) VALUE SPACES.
           12 R1-Cust-First-Name      PIC X(20).
           12 FILLER                  PIC X(001) VALUE SPACES.
           12 R1-Cust-Last-Name       PIC X(30).
           12 FILLER                  PIC X(001) VALUE SPACES.

       01  R1-Footer1.
           12 FILLER                     PIC X(06) VALUE "Total:".
           12 FILLER                     PIC X(001) VALUE SPACES.
           12 R1-Ft-Inv-Sub-Total        PIC $$,$$$,$$9.99.
           12 FILLER                     PIC X(001) VALUE SPACES.
           12 R1-Ft-Inv-Tax-Total        PIC $$$,$$9.99.
           12 FILLER                     PIC X(001) VALUE SPACES.
           12 R1-Ft-Inv-Shipping-Total   PIC $$$,$$9.99.
           12 FILLER                     PIC X(001) VALUE SPACES.
           12 R1-Ft-Inv-Total-Total      PIC $$,$$$,$$9.99.
           12 FILLER                     PIC X(005) VALUE SPACES.
           12 R1-Ft-Invoice-Record-Total PIC ZZZ9.
           12 FILLER                     PIC X(001) VALUE SPACES.
           12 FILLER                     PIC X(015)
              VALUE "Invoices Issued".

       01 EOJ-Display-Messages.
           12 EOJ-End-Message PIC X(042) VALUE
              "*** Program INVREG - End of Run Messages".

       PROCEDURE DIVISION.
       0000-Mainline.
           PERFORM 1000-Begin-Job.
           PERFORM 2000-Process.
           PERFORM 3000-End-Job.
           GOBACK.

       1000-Begin-Job.
           PERFORM 9800-Connect-to-DB1.
           IF SQL-STATUS-OK
              OPEN OUTPUT INVREG
              PERFORM 6101-Setup-R1
              PERFORM 6110-Write-R1-Page-Header
              PERFORM 5000-Read-DB1
           END-IF.

       2000-Process.
           PERFORM 2100-Process-Data
              UNTIL NOT SQL-STATUS-OK.

       2100-Process-Data.
           IF SQL-STATUS-OK
              PERFORM 2110-Move-Detail-Data
              PERFORM 2120-Calc-Totals
              MOVE 1 TO R1-Line-Advance
              PERFORM 6100-Write-R1
              PERFORM 5000-Read-DB1
           END-IF.

       2110-Move-Detail-Data.
           MOVE HV-Inv-Number       TO R1-Inv-Number.
           MOVE HV-Inv-Sub-Total    TO R1-Inv-Sub-Total.
           MOVE HV-Inv-Tax          TO R1-Inv-Tax.
           MOVE HV-Inv-Shipping     TO R1-Inv-Shipping.
           MOVE HV-Inv-Total        TO R1-Inv-Total.
           MOVE HV-Cust-Number      TO R1-Cust-Number.
           MOVE HV-Cust-First-Name  TO R1-Cust-First-Name.
           MOVE HV-Cust-Last-Name   TO R1-Cust-Last-Name.

       2120-Calc-Totals.
           COMPUTE WS-Inv-Sub-Total-Cnt =
              WS-Inv-Sub-Total-Cnt + HV-Inv-Sub-Total.
           COMPUTE WS-Inv-Tax-Cnt =
              WS-Inv-Tax-Cnt + HV-Inv-Tax.
           COMPUTE WS-Inv-Shipping-Cnt =
              WS-Inv-Shipping-Cnt + HV-Inv-Shipping.
           COMPUTE WS-Inv-Total-Cnt =
              WS-Inv-Total-Cnt + HV-Inv-Total.

       3000-End-Job.
           EXEC SQL CLOSE DB1-C1 END-EXEC.
           MOVE SQLCODE TO WS-SQL-STATUS.

           EXEC SQL CONNECT RESET END-EXEC.
           MOVE SQLCODE TO WS-SQL-STATUS.
           MOVE WS-Inv-Sub-Total-Cnt TO R1-Ft-Inv-Sub-Total.
           MOVE WS-Inv-Tax-Cnt TO R1-Ft-Inv-Tax-Total.
           MOVE WS-Inv-Shipping-Cnt TO R1-Ft-Inv-Shipping-Total.
           MOVE WS-Inv-Total-Cnt TO R1-Ft-Inv-Total-Total.
           MOVE WS-Invoice-Record-Cnt TO R1-Ft-Invoice-Record-Total.
           PERFORM 6130-Write-R1-Footer.
           CLOSE INVREG.

       5000-Read-DB1.
           EXEC SQL FETCH DB1-C1
              INTO
                 :HV-Inv-Number,
                 :HV-Inv-Sub-Total,
                 :HV-Inv-Tax,
                 :HV-Inv-Shipping,
                 :HV-Inv-Total,
                 :HV-Cust-Number,
                 :HV-Cust-First-Name,
                 :HV-Cust-Last-Name
           END-EXEC.
           MOVE SQLCODE TO WS-SQL-STATUS.
           IF SQL-STATUS-OK
              ADD +1 TO WS-Invoice-Record-Cnt
           ELSE
              IF SQL-STATUS-NOT-FOUND
                 NEXT SENTENCE
              ELSE
                 DISPLAY "*** WARNING ***"
                 DISPLAY "There was a problem Fetching the cursor."
                 DISPLAY "SQLCODE = " SQLCODE
                 PERFORM 3000-End-Job
                 MOVE 8 TO RETURN-CODE
                 GOBACK
              END-IF
           END-IF.

       6100-Write-R1.
           IF R1-Line-Count + R1-Line-Advance > R1-Max-Lines
              PERFORM 6110-Write-R1-Page-Header
              PERFORM 6120-Write-R1-Detail
           ELSE
              PERFORM 6120-Write-R1-Detail
           END-IF.

       6101-Setup-R1.
           MOVE FUNCTION CURRENT-DATE TO CURRENT-DATE-AND-TIME.
           MOVE CDT-Year     TO R1-HDR-YY.
           MOVE CDT-Month    TO R1-HDR-MM.
           MOVE CDT-Day      TO R1-HDR-DD.

       6110-Write-R1-Page-Header.
           ADD +1 TO R1-Page-Count.
           MOVE R1-Page-Count TO R1-HDR-Page-Count.
           WRITE Print-Line FROM R1-Page-Header
              AFTER ADVANCING PAGE.
           WRITE Print-Line FROM R1-Column-Header1
              AFTER ADVANCING 2.
           WRITE Print-Line FROM R1-Column-Header2
              AFTER ADVANCING 1.
           MOVE 4 TO R1-Line-Count.

       6120-Write-R1-Detail.
           MOVE R1-Detail-Line TO Print-Line.
           WRITE Print-Line
              AFTER ADVANCING R1-Line-Advance LINES.
           ADD R1-Line-Advance TO R1-Line-Count.

       6130-Write-R1-Footer.
           IF R1-Line-Count + 3 > R1-Max-Lines
              PERFORM 6110-Write-R1-Page-Header
           END-IF.
           MOVE R1-Footer1 TO Print-Line.
           WRITE Print-Line
              AFTER ADVANCING 2 LINES.
           PERFORM 6140-Display-EOJ-Messages.

       6140-Display-EOJ-Messages.
           DISPLAY EOJ-End-Message.

       9800-Connect-to-DB1.
           PERFORM 9810-Setup-DB1-Connection.
           IF SQL-STATUS-OK
              CONTINUE
           ELSE
              DISPLAY "*** The DB connection is not valid!***"
              DISPLAY "Exiting the program.!"
              GOBACK
           END-IF.

       9810-Setup-DB1-Connection.
           PERFORM 9811-Get-Credentials.
           PERFORM 9812-Create-Connection-To-DB1.

       9811-Get-Credentials.
           ACCEPT DB1-DBName FROM ENVIRONMENT 'db2name'.
           ACCEPT DB1-User-ID FROM ENVIRONMENT 'username'.
           ACCEPT DB1-Passwd-Name FROM ENVIRONMENT 'password'.

      *    Passwords in a CONNECT statement should be entered
      *    in a VARCHAR format with the length of the input string.
           INSPECT DB1-Passwd-Name
              TALLYING DB1-Passwd-Length
              FOR CHARACTERS BEFORE INITIAL " ".

      D    DISPLAY "DB1-DBName " DB1-DBName.
      D    DISPLAY "DB1-User-ID " DB1-User-ID.
      D    DISPLAY "DB1-Passwd-Name " DB1-Passwd-Name.

       9812-Create-Connection-To-DB1.
           PERFORM 9814-Connect-To-DB1
           IF SQL-STATUS-OK
              PERFORM 9816-Create-Cursor-DB1
              IF SQL-STATUS-OK
                 PERFORM 9818-Open-Cursor-DB1
              END-IF
           END-IF.

       9814-Connect-To-DB1.
           EXEC SQL CONNECT TO :DB1-DBName
                USER :DB1-User-ID
                USING :DB1-Password
              END-EXEC.
           MOVE SQLCODE TO WS-SQL-STATUS.

       9816-Create-Cursor-DB1.
      *    Parms for DB1-C1
      *D     DISPLAY "Nothing to do here.".
      *    As an example:
      *     MOVE "DESIGNER" TO HV-Job-Title.

       9818-Open-Cursor-DB1.
           EXEC SQL OPEN DB1-C1 END-EXEC.
           MOVE SQLCODE TO WS-SQL-STATUS.
